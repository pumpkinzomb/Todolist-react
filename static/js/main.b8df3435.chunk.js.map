{"version":3,"sources":["components/TodoListTemplate.js","components/TodoItem.js","components/TodoItemList.js","components/Palette.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["TodoListTemplate","_this$props","this","props","form","children","react_default","a","createElement","className","Component","TodoItem","text","checked","id","onToggle","onRemove","onEdit","color","onClick","e","stopPropagation","concat","src","alt","TodoItemList","nextProps","nextState","todos","map","todo","src_components_TodoItem","Object","assign","key","Color","_ref","onSelect","selected","Palette","colors","Palette_Color","AddForm","_ref2","value","onChange","onKeyPress","onColor","onCreate","addTargetInput","ref","EditForm","_ref3","onEditSubmit","editTargetInput","Form","formState","src_components_Palette","mode","Form_AddForm","Form_EditForm","App","state","input","selectedColor","editTarget","_onChange","_this","setState","target","_onCreate","_this$state","length","lastId","updateTodo","_setCookie","_onKeyPress","_onEditSubmit","_onToggle","index","findIndex","newTodos","toConsumableArray","objectSpread","_onRemove","filter","_onEdit","editInput","focus","_this$state2","_onSelect","name","exp","expires","Date","tmp","getDate","setDate","cookieOptions","cookie","save","_getCookie","Promise","resolve","reject","load","_deleteCookie","remove","_this2","defaultTodos","then","response","undefined","addInput","console","log","_this3","_this$state3","src_components_TodoListTemplate","src_components_Form","components_TodoItemList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8df3435.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\r\nimport \"./TodoListTemplate.css\"\r\n\r\nclass TodoListTemplate extends Component{\r\n    render(){\r\n        const {form,children} = this.props;\r\n        return(\r\n            <main className=\"todo-list-template\">\r\n                <div className=\"title\">\r\n                    오늘 할 일\r\n                </div>\r\n                <section className=\"form-wrapper\">\r\n                    { form }\r\n                </section>\r\n                <section className=\"todos-wrapper\">\r\n                    { children }\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTemplate;","import React, { Component } from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends Component{\r\n    \r\n    render(){\r\n        const { text, checked, id, onToggle, onRemove, onEdit, color } = this.props;\r\n        return(\r\n            <div className={`todo-item`} onClick={() => onToggle(id)}>\r\n                <div className=\"remove\" onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onRemove(id);\r\n                }}> &times; </div>\r\n                <div className={`todo-text ${checked ? \"checked\" : \"\"} ${color}`}>\r\n                    <div>{ text }</div>\r\n                </div>\r\n                {\r\n                    checked && (<div className=\"check-mark\">&#x2713;</div>) //checked가 true면 우측 실행, ( 좌측이 true일 경우 )항상 우측이 반환됨\r\n                }\r\n                <div className=\"edit-btn\" onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onEdit(id);\r\n                }}><img src=\"/imgs/edit.png\" alt=\"edit_pecil_Image\" /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodoItemList extends Component {\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return this.props.todos !== nextProps.todos;\r\n    }\r\n\r\n    render(){\r\n        const { todos, onToggle, onRemove, onEdit } = this.props;\r\n        return (\r\n            <div>\r\n                {\r\n                    todos.map(todo => (\r\n                        <TodoItem \r\n                            {...todo}\r\n                            onToggle={onToggle}\r\n                            onRemove={onRemove}\r\n                            onEdit={onEdit}\r\n                            key={todo.id}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItemList;","import React, {Component} from \"react\";\r\nimport \"./Palette.css\"\r\n\r\nconst Color = ({color, onSelect ,selected}) => {\r\n    return (\r\n        <span className={`palette-${color} color ${selected===color? \"active\" :\"\"}`} onClick={()=>{onSelect(color)}}></span>\r\n    );\r\n}\r\n\r\nclass Palette extends Component{\r\n    \r\n    render(){\r\n        const {colors, onSelect, selected} = this.props;\r\n        return(\r\n            <div className=\"palette\">\r\n                {\r\n                colors.map(color=>(\r\n                    <Color \r\n                        color={color}\r\n                        selected={selected} \r\n                        onSelect={onSelect} \r\n                        key={color}\r\n                    />  \r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Palette;","import React from \"react\";\r\nimport \"./Form.css\"\r\nimport Palette from \"./Palette\"\r\n\r\nconst Form = ({value, onChange, onCreate, onKeyPress, colors, onColor, onSelect,onEditSubmit,formState ,addTargetInput,editTargetInput}) => {\r\n    \r\n    return(\r\n        <div>\r\n            <Palette colors={colors} selected={onColor} onSelect={onSelect}  />\r\n            {\r\n                formState.mode === \"add\" ? \r\n                <AddForm value={value} onChange={onChange} onKeyPress={onKeyPress} onColor={onColor} onCreate={onCreate} addTargetInput={addTargetInput}  /> :\r\n                <EditForm value={value} onChange={onChange} onKeyPress={onKeyPress} onColor={onColor} onEditSubmit={onEditSubmit} editTargetInput={editTargetInput} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddForm = ({\r\n    value,\r\n    onChange,\r\n    onKeyPress,\r\n    onColor,\r\n    onCreate,\r\n    addTargetInput\r\n}) =>{\r\n    return(\r\n        <div className=\"form\">\r\n            <input \r\n                value={value} \r\n                onChange={onChange} \r\n                onKeyPress={onKeyPress} \r\n                className={onColor} \r\n                ref={addTargetInput}\r\n            />\r\n            <div className=\"create-button\" onClick={onCreate}>추가</div>\r\n        </div>\r\n    )\r\n}\r\nconst EditForm = ({\r\n    value,\r\n    onChange,\r\n    onKeyPress,\r\n    onColor,\r\n    onEditSubmit,\r\n    editTargetInput\r\n}) => {\r\n    return( \r\n        <div className=\"form\">\r\n            <input \r\n                value={value} \r\n                onChange={onChange} \r\n                onKeyPress={onKeyPress} \r\n                className={onColor}\r\n                ref = {editTargetInput}   \r\n             />\r\n            <div className=\"create-button\" onClick={onEditSubmit}>Edit</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport TodoListTemplate from \"./components/TodoListTemplate\"\nimport TodoItemList from \"./components/TodoItemList\"\nimport Form from \"./components/Form\"\nimport cookie from \"react-cookies\"\n\n\nclass App extends Component {\n  \n  state = {\n    input : \"\",\n    todos : [],\n    colors : [\n      \"color1\", //#343a40\n      \"color2\", //#f03e3e\n      \"color3\", //#12b886\n      \"color4\" //#228ae6\n    ],\n    selectedColor:\"\",\n    formState:{\n      mode:\"add\",\n      editTarget:\"\"\n    }\n  }\n\n  \n  \n  componentWillMount(){\n    //this._deleteCookie('todos');\n    let defaultTodos = [\n      {id:0, text:\"오늘의 할 일1\", checked: false, color:\"\"},\n      {id:1, text:\"클릭하면 체크가 됩니다.\", checked: true, color:\"\"},\n      {id:2, text:\"글씨 색도 바꿔보세요.\", checked: false, color:\"color3\"}\n    ]\n    this._getCookie(\"todos\").then(\n      response => {\n        if(response !== undefined){\n          this.setState({ todos: response});\n        }else{\n          this.setState({ todos: defaultTodos});\n        }\n      })\n  }\n  componentDidUpdate(){\n    if(this.editInput) this.editInput.focus();\n    if(this.addInput) this.addInput.focus();\n  }\n  shouldComponentUpdate(nextProps,nextState) {\n    console.log(this.state)\n    console.log(nextState)\n    return true;\n\n  }\n\n  _onChange = (e) =>{\n    this.setState(\n      {\n        input:e.target.value\n      }\n    );\n  }\n  \n  _onCreate = () => {\n    const { input,todos,selectedColor } = this.state;\n    if(input.length === 0){\n      return;\n    }\n    let lastId = todos.length === 0 ? -1: todos[todos.length-1].id;\n    const updateTodo  = todos.concat({\n      id: ++lastId,\n      text: input,\n      checked: false,\n      color:selectedColor\n    });\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n        input:\"\", //input 비움\n        todos: updateTodo,\n        selectedColor:\"\"\n    });\n  }\n\n  _onKeyPress = (e) => {\n    if(e.key === \"Enter\"){\n      if(this.state.formState.mode===\"add\"){\n        this._onCreate();\n      }else{\n        this._onEditSubmit();\n      }\n    }\n  }\n\n  _onToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const newTodos = [...todos];\n\n    newTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    }\n    const updateTodo  = newTodos;\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos:updateTodo\n    });\n  }\n\n  _onRemove = (id) => {\n    const { todos } = this.state;\n    const updateTodo  = todos.filter(todo => todo.id !== id);\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos: updateTodo\n    });\n  }\n\n  _onEdit = (id) => {\n    if(this.state.formState.mode===\"add\"){\n      const { todos } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      this.setState({\n        input:selected.text,\n        formState:{\n          mode:\"edit\",\n          editTarget:selected\n        },\n        selectedColor:selected.color\n      })\n    }else{\n      this.setState({\n        input:\"\",\n        formState:{\n          mode:\"add\",\n          editTarget:\"\"\n        },\n        selectedColor:\"\"\n      })\n    }\n    if(this.editInput) this.editInput.focus();\n  }\n  _onEditSubmit = () =>{\n    const { todos,formState,input,selectedColor } = this.state;\n    const index = todos.findIndex(todo => todo.id === formState.editTarget.id);\n    const selected = todos[index];\n    const newTodos = [...todos];\n    \n    newTodos[index] = {\n      ...selected,\n      text:input,\n      color:selectedColor\n    }\n    \n    const updateTodo  = newTodos;\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos:updateTodo,\n      formState:{\n        mode:\"add\",\n        editTarget:\"\"\n      },\n      input:\"\",\n      selectedColor:\"\"\n    });\n    \n  }\n\n  _onSelect = (color) =>{\n    this.setState({\n      selectedColor: color\n    });\n  }\n\n  // cookie 메소드 시작\n  //  재미로 만들었지만 cookie를 사용하여 todoList를 저장함\n  _setCookie = (name, value, exp) => {\n\n    let expires = new Date();\n    let tmp = expires.getDate();\n    expires.setDate(tmp + exp); // 만료일은 쿠키 저장일로부터 100일 후\n    \n    const cookieOptions = {\n        expires\n    }\n    \n    //var transStringValue = JSON.stringify(value);\n    cookie.save(name, value, cookieOptions);\n\n  }\n  _getCookie = (name) => {\n    return new Promise(function (resolve, reject) {\n      var value = cookie.load(name);\n      resolve(value);\n    });\n  }\n  _deleteCookie = (name) =>{\n    cookie.remove(name)\n  }\n  // cookie 메소드 끝\n\n  render() {\n    const { input, todos, colors, selectedColor,formState } = this.state;\n    const {\n      _onChange,\n      _onCreate,\n      _onKeyPress,\n      _onToggle,\n      _onRemove,\n      _onSelect,\n      _onEdit,\n      _onEditSubmit\n    } = this;\n\n    return (\n      <TodoListTemplate form={\n        <Form \n          value={input} //Form\n          onKeyPress={_onKeyPress} //Form\n          onChange={_onChange} //Form\n          onCreate={_onCreate} //Form\n          onEditSubmit = {_onEditSubmit} //Form\n          formState={formState} //Form\n          addTargetInput={ref=>{\n                          this.addInput = ref\n                      }} //Form\n          editTargetInput={ref=>{\n                          this.editInput = ref\n                      }} //Form\n\n          colors={colors} //Palette\n          onColor={selectedColor} //Palette\n          onSelect={_onSelect} //Palette\n        />}>\n          <TodoItemList todos={todos} onToggle={_onToggle} onRemove={_onRemove} onEdit={_onEdit} />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}