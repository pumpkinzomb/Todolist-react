{"version":3,"sources":["components/TodoListTemplate.js","components/TodoItem.js","components/RealignmentItem.js","components/TodoItemList.js","components/Palette.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["TodoListTemplate","_this$props","this","props","form","children","react_default","a","createElement","className","Component","TodoItem","text","checked","id","bolded","onToggle","onRemove","onEdit","color","onClick","e","stopPropagation","concat","src","alt","RealignmentItem","realignmentMode","r_insertFrom","r_insertTo","r_checked","from","TodoItemList","todos","map","todo","state","src_components_TodoItem","Object","assign","key","RealignmentItem_RealignmentItem","Color","_ref","onSelect","selected","Palette","colors","onBolded","Palette_Color","AddForm","_ref2","value","onChange","onKeyPress","onColor","onCreate","addTargetInput","ref","EditForm","_ref3","onEditSubmit","editTargetInput","Form","formState","toggleRealignmentMode","src_components_Palette","mode","Form_AddForm","Form_EditForm","App","input","selectedColor","editTarget","_onChange","_this","setState","target","_onCreate","_this$state","length","reverseTodo","toConsumableArray","reverse","lastId","updateTodo","_setCookie","_onKeyPress","_onEditSubmit","_onToggle","index","findIndex","newTodos","objectSpread","_onBolded","_onRemove","filter","_onEdit","editInput","focus","_this$state2","_onSelect","_toggleRealignmentMode","_r_insertFrom","_r_insertTo","_this$state3","fromIndex","selectFrom","toIndex","splice","newTodoIndex","newTodo","name","exp","expires","Date","tmp","getDate","setDate","cookieOptions","cookie","save","_getCookie","Promise","resolve","reject","load","_deleteCookie","remove","_this2","defaultTodos","then","response","undefined","addInput","nextProps","nextState","_this3","_this$state4","src_components_TodoListTemplate","src_components_Form","components_TodoItemList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0b0dc2c.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\r\nimport \"./TodoListTemplate.css\"\r\n\r\nclass TodoListTemplate extends Component{\r\n    render(){\r\n        const {form,children} = this.props;\r\n        return(\r\n            <main className=\"todo-list-template\">\r\n                <div className=\"title\">\r\n                    오늘 할 일\r\n                </div>\r\n                <section className=\"form-wrapper\">\r\n                    { form }\r\n                </section>\r\n                <section className=\"todos-wrapper\">\r\n                    { children }\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTemplate;","import React, { Component } from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends Component{\r\n    \r\n    render(){\r\n        const { text, checked, id, bolded, onToggle, onRemove, onEdit, color } = this.props;\r\n        return(\r\n            <div className={`todo-item`} onClick={() => onToggle(id)}>\r\n                <div className=\"remove\" onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onRemove(id);\r\n                }}> &times; </div>\r\n                <div className={`todo-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`}>\r\n                    <div>{ text }</div>\r\n                </div>\r\n                {\r\n                    checked && (<div className=\"check-mark\">&#x2713;</div>) //checked가 true면 우측 실행, ( 좌측이 true일 경우 )항상 우측이 반환됨\r\n                }\r\n                <div className=\"edit-btn\" onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onEdit(id);\r\n                }}><img src=\"imgs/edit.png\" alt=\"edit_pecil_Image\" /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from \"react\";\r\nimport \"./RealignmentItem.css\"\r\n\r\nexport default class RealignmentItem extends Component {\r\n    render(){\r\n        const { text, id, color, bolded, checked, realignmentMode, r_insertFrom, r_insertTo } = this.props;\r\n        let r_checked = realignmentMode.from === id;\r\n        return(\r\n            <div className={`realignment-item  ${r_checked ? \"r_checked\" : \"\"}`} onClick={(e)=>{\r\n                    realignmentMode.from===\"\" ? r_insertFrom(id) : r_insertTo (id);\r\n                }}>\r\n                <div className=\"realignment-btn\">{r_checked ? (<img src=\"imgs/realignment_checked.png\" alt=\"edit_pecil_Image\" />) : (<img src=\"imgs/realignment.png\" alt=\"edit_pecil_Image\" />) }</div>\r\n                <div className= {`realignment-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`} >\r\n                    <div>{ text }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\nimport RealignmentItem from \"./RealignmentItem\"\r\n\r\nclass TodoItemList extends Component {\r\n\r\n    render(){\r\n        const { todos, onToggle, onRemove, onEdit, realignmentMode, r_insertFrom, r_insertTo } = this.props;\r\n        return (\r\n            <div>\r\n                {\r\n                    todos.map(todo => (\r\n                        realignmentMode.state === false ? \r\n                        <TodoItem \r\n                            {...todo}\r\n                            onToggle={onToggle}\r\n                            onRemove={onRemove}\r\n                            onEdit={onEdit}\r\n                            key={todo.id}\r\n                        /> :\r\n                        <RealignmentItem \r\n                            {...todo} \r\n                            key={todo.id}\r\n                            realignmentMode={realignmentMode}\r\n                            r_insertFrom={r_insertFrom}\r\n                            r_insertTo={r_insertTo}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItemList;","import React, {Component} from \"react\";\r\nimport \"./Palette.css\"\r\n\r\nconst Color = ({color, onSelect ,selected}) => {\r\n    return (\r\n        <span className={`palette-${color} color ${selected===color? \"active\" :\"\"}`} onClick={()=>{onSelect(color)}}></span>\r\n    );\r\n}\r\n\r\nclass Palette extends Component{\r\n    \r\n    render(){\r\n        const {colors, onSelect, selected, onBolded} = this.props;\r\n        return(\r\n            <div className=\"palette\">\r\n                {\r\n                colors.map(color=>(\r\n                    <Color \r\n                        color={color}\r\n                        selected={selected} \r\n                        onSelect={onSelect} \r\n                        key={color}\r\n                    />  \r\n                ))\r\n                }\r\n                <div className=\"make-bold\" onClick={onBolded}><img src=\"imgs/bold.png\" alt=\"bold 처리하기\" /></div>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Palette;","import React from \"react\";\r\nimport \"./Form.css\"\r\nimport Palette from \"./Palette\"\r\n\r\nconst Form = ({\r\n                value, \r\n                onChange, \r\n                onCreate, \r\n                onKeyPress, \r\n                colors, \r\n                onColor, \r\n                onSelect,\r\n                bolded,\r\n                onBolded,\r\n                onEditSubmit,\r\n                formState ,\r\n                addTargetInput,\r\n                editTargetInput,\r\n                toggleRealignmentMode}) => {\r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"palette-with-btns\">\r\n                <div className=\"sort-btn\"><img src=\"imgs/list_sort2.png\" alt=\"Rearrange list button\" onClick={toggleRealignmentMode} /></div>\r\n                <Palette colors={colors} selected={onColor} onSelect={onSelect} onBolded={onBolded}  />\r\n            </div>\r\n            {\r\n                formState.mode === \"add\" ? \r\n                <AddForm \r\n                    value={value} \r\n                    onChange={onChange} \r\n                    onKeyPress={onKeyPress} \r\n                    bolded={bolded} \r\n                    onColor={onColor} \r\n                    onCreate={onCreate} \r\n                    addTargetInput={addTargetInput}  /> :\r\n                <EditForm \r\n                    value={value} \r\n                    onChange={onChange} \r\n                    onKeyPress={onKeyPress} \r\n                    bolded={bolded} \r\n                    onColor={onColor} \r\n                    onEditSubmit={onEditSubmit} \r\n                    editTargetInput={editTargetInput} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddForm = ({\r\n    value,\r\n    onChange,\r\n    onKeyPress,\r\n    onColor,\r\n    onCreate,\r\n    addTargetInput,\r\n    bolded\r\n}) =>{\r\n    return(\r\n        <div className=\"form\">\r\n            <input \r\n                value={value} \r\n                onChange={onChange} \r\n                onKeyPress={onKeyPress} \r\n                className={`${onColor} ${bolded ? \"bold-font\" : \"\"}`} \r\n                ref={addTargetInput}\r\n            />\r\n            <div className=\"create-button\" onClick={onCreate}>추가</div>\r\n        </div>\r\n    )\r\n}\r\nconst EditForm = ({\r\n    value,\r\n    onChange,\r\n    onKeyPress,\r\n    onColor,\r\n    onEditSubmit,\r\n    editTargetInput,\r\n    bolded\r\n}) => {\r\n    return( \r\n        <div className=\"form\">\r\n            <input \r\n                value={value} \r\n                onChange={onChange} \r\n                onKeyPress={onKeyPress} \r\n                className={`${onColor} ${bolded ? \"bold-font\" : \"\"}`}\r\n                ref = {editTargetInput}   \r\n             />\r\n            <div className=\"create-button\" onClick={onEditSubmit}>Edit</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport TodoListTemplate from \"./components/TodoListTemplate\"\nimport TodoItemList from \"./components/TodoItemList\"\nimport Form from \"./components/Form\"\nimport cookie from \"react-cookies\"\n\n\nclass App extends Component {\n  \n  state = {\n    input : \"\",\n    todos : [],\n    colors : [\n      \"color1\", //#343a40\n      \"color2\", //#f03e3e\n      \"color3\", //#12b886\n      \"color4\" //#228ae6\n    ],\n    selectedColor:\"\",\n    bolded:false,\n    formState:{\n      mode:\"add\",\n      editTarget:\"\"\n    },\n    realignmentMode: {\n      state:false,\n      from:\"\"\n    }\n  }\n\n  \n  \n  componentWillMount(){\n    //this._deleteCookie('todos');\n    const defaultTodos = [\n      {id:2, text:\"오늘의 할 일1\", checked: false, color:\"\", bolded:true},\n      {id:1, text:\"클릭하면 체크가 됩니다.\", checked: true, color:\"\", bolded:false},\n      {id:0, text:\"글씨 색도 바꿔보세요.\", checked: false, color:\"color3\", bolded:false}\n    ]\n    this._getCookie(\"todos\").then(\n      response => {\n        if(response !== undefined){\n          this.setState({ todos: response});\n        }else{\n          this.setState({ todos: defaultTodos});\n        }\n      })\n  }\n  componentDidUpdate(){\n    if(this.editInput) this.editInput.focus();\n    if(this.addInput) this.addInput.focus();\n  }\n  shouldComponentUpdate(nextProps,nextState) {\n    // console.log(this.state)\n    // console.log(nextState)\n    return true;\n\n  }\n\n  _onChange = (e) =>{\n    this.setState(\n      {\n        input:e.target.value\n      }\n    );\n  }\n  \n  _onCreate = () => {\n    const { input,todos,selectedColor,bolded } = this.state;\n    if(input.length === 0){\n      return;\n    }\n    let reverseTodo = [...todos].reverse();\n    let lastId = reverseTodo.length === 0 ? -1: reverseTodo[reverseTodo.length-1].id;\n    const updateTodo  = reverseTodo.concat({\n      id: ++lastId,\n      text: input,\n      checked: false,\n      color:selectedColor,\n      bolded:bolded\n    });\n    reverseTodo = [...updateTodo].reverse();\n    this._setCookie(\"todos\",reverseTodo,300);\n    this.setState({\n        input:\"\", //input 비움\n        todos: reverseTodo,\n        selectedColor:\"\",\n        bolded:false\n    });\n  }\n\n  _onKeyPress = (e) => {\n    if(e.key === \"Enter\"){\n      if(this.state.formState.mode===\"add\"){\n        this._onCreate();\n      }else{\n        this._onEditSubmit();\n      }\n    }\n  }\n\n  _onToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const newTodos = [...todos];\n\n    newTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    }\n    const updateTodo  = newTodos;\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos:updateTodo\n    });\n  }\n\n  _onBolded = () => {\n\n    this.setState({\n      bolded:!this.state.bolded\n    });\n  }\n\n  _onRemove = (id) => {\n    const { todos } = this.state;\n    const updateTodo  = todos.filter(todo => todo.id !== id);\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos: updateTodo\n    });\n  }\n\n  _onEdit = (id) => {\n    if(this.state.formState.mode===\"add\"){\n      const { todos } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      this.setState({\n        input:selected.text,\n        formState:{\n          mode:\"edit\",\n          editTarget:selected\n        },\n        bolded:selected.bolded,\n        selectedColor:selected.color\n      })\n    }else{\n      if(this.state.formState.editTarget.id !== id){\n        const { todos } = this.state;\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index];\n        this.setState({\n          input:selected.text,\n          formState:{\n            mode:\"edit\",\n            editTarget:selected\n          },\n          bolded:selected.bolded,\n          selectedColor:selected.color\n        })\n      }else{\n        this.setState({\n          input:\"\",\n          formState:{\n            mode:\"add\",\n            editTarget:\"\"\n          },\n          selectedColor:\"\",\n          bolded:false\n        })\n      }\n    }\n    if(this.editInput) this.editInput.focus();\n  }\n  _onEditSubmit = () =>{\n    const { todos,formState,input,selectedColor,bolded } = this.state;\n    const index = todos.findIndex(todo => todo.id === formState.editTarget.id);\n    const selected = todos[index];\n    const newTodos = [...todos];\n    \n    newTodos[index] = {\n      ...selected,\n      text:input,\n      color:selectedColor,\n      bolded:bolded\n    }\n    \n    const updateTodo  = newTodos;\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos:updateTodo,\n      formState:{\n        mode:\"add\",\n        editTarget:\"\"\n      },\n      input:\"\",\n      selectedColor:\"\"\n    });\n    \n  }\n\n  _onSelect = (color) =>{\n    this.setState({\n      selectedColor: color\n    });\n  }\n\n  _toggleRealignmentMode = () =>{\n    this.setState({\n      realignmentMode: {\n        state:!this.state.realignmentMode.state,\n        from:\"\"\n      }\n    });\n  }\n  _r_insertFrom = (id) => {\n    this.setState({\n      realignmentMode: {\n        state:true,\n        from:id\n      }\n    });\n  }\n  _r_insertTo = (id) => {\n    if(this.state.realignmentMode.from === id){\n      return this._toggleRealignmentMode();\n    }\n    const { todos, realignmentMode } = this.state;\n    const fromIndex = todos.findIndex(todo => todo.id === realignmentMode.from);\n    const selectFrom = todos[fromIndex];\n    const toIndex = todos.findIndex(todo => todo.id === id);\n    const newTodos = [...todos];\n    \n    newTodos.splice(fromIndex,1); //잘라서\n    newTodos.splice(toIndex,0,selectFrom); //붙인다\n\n    let newTodoIndex=newTodos.length;\n    const updateTodo = newTodos.map(newTodo=>{\n      newTodo.id = --newTodoIndex;\n      return newTodo\n    });\n    this._setCookie(\"todos\",updateTodo,300);\n    this.setState({\n      todos:updateTodo,\n      realignmentMode: {\n        state:true,\n        from:id\n      }\n    });\n  }\n\n  // cookie 메소드 시작\n  //  재미로 만들었지만 cookie를 사용하여 todoList를 저장함\n  _setCookie = (name, value, exp) => {\n\n    let expires = new Date();\n    let tmp = expires.getDate();\n    expires.setDate(tmp + exp); // 만료일은 쿠키 저장일로부터 300일 후\n    \n    const cookieOptions = {\n        expires\n    }\n    \n    //var transStringValue = JSON.stringify(value);\n    cookie.save(name, value, cookieOptions);\n\n  }\n  _getCookie = (name) => {\n    return new Promise(function (resolve, reject) {\n      var value = cookie.load(name);\n      resolve(value);\n    });\n  }\n  _deleteCookie = (name) =>{\n    cookie.remove(name)\n  }\n  // cookie 메소드 끝\n\n  render() {\n    const { input, todos, colors, selectedColor, formState, realignmentMode, bolded } = this.state;\n    const {\n      _onChange,\n      _onCreate,\n      _onKeyPress,\n      _onToggle,\n      _onBolded,\n      _onRemove,\n      _onSelect,\n      _onEdit,\n      _onEditSubmit,\n      _toggleRealignmentMode,\n      _r_insertFrom,\n      _r_insertTo\n    } = this;\n\n    return (\n      <TodoListTemplate form={\n        <Form \n          value={input} //Form\n          onKeyPress={_onKeyPress} //Form\n          onChange={_onChange} //Form\n          onCreate={_onCreate} //Form\n          onEditSubmit = {_onEditSubmit} //Form\n          formState={formState} //Form\n          addTargetInput={ref=>{\n                          this.addInput = ref\n                      }} //Form\n          editTargetInput={ref=>{\n                          this.editInput = ref\n                      }} //Form\n          onBolded = {_onBolded} //Form\n          bolded = {bolded} //Form\n          toggleRealignmentMode={_toggleRealignmentMode} //realignment-mode-btn\n\n          colors={colors} //Palette\n          onColor={selectedColor} //Palette\n          onSelect={_onSelect} //Palette\n        />}>\n          <TodoItemList \n            todos={todos} \n            onToggle={_onToggle} \n            onRemove={_onRemove} \n            onEdit={_onEdit} \n            realignmentMode={realignmentMode} \n            r_insertFrom={_r_insertFrom} \n            r_insertTo={_r_insertTo} />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}